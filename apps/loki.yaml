apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: admin
spec:
  project: default
  source:
    repoURL: registry-1.docker.io/bitnamicharts
    chart: grafana-loki
    targetRevision: 4.8.0
    helm:
      values: |
        global:
          storageClass: smb-sc
        
        persistence:
          enabled: true
          size: 10Gi
          storageClass: smb-sc
        
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-rules
  namespace: monitoring
data:
  alerts.yml: |
    groups:
      - name: loki-alerts
        rules:
          - alert: LokiRequestErrors
            expr: |
              100 * sum(rate(loki_request_duration_seconds_count{status_code=~"5.."}[1m])) by (namespace, job)
                /
              sum(rate(loki_request_duration_seconds_count[1m])) by (namespace, job)
                > 10
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: Loki request error rate too high
              description: "{{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}% errors."
          
          - alert: LokiRequestPanic
            expr: sum(increase(loki_panic_total[10m])) by (namespace, job) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: Loki request panic
              description: "{{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }} panic errors." 