apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgresql
  namespace: admin
spec:
  project: default
  source:
    repoURL: registry-1.docker.io/bitnamicharts
    chart: postgresql
    targetRevision: 16.7.12
    helm:
      values: |
        auth:
          existingSecret: "postgresql-secret"
        image:
          debug: true
        global:
          defaultStorageClass: smb-sc
        primary:
          persistence:
            enabled: true
            size: 2Ti
          resources:
            limits:
              cpu: "4000m"
              memory: "4Gi"
            requests:
              cpu: "250m"
              memory: "256Mi"
          service:
            type: NodePort
            nodePorts:
              postgresql: 30001
        backup:
          enabled: true
          cronjob:
            schedule: "0 2 * * *"
            successfulJobsHistoryLimit: 7
            failedJobsHistoryLimit: 3
            ttlSecondsAfterFinished: 86400
            command:
              - /bin/bash
              - -c
              - |
                  BACKUP_DATE=$(date '+%Y-%m-%d-%H-%M')
                  echo "Backup date: ${BACKUP_DATE}"
                  BACKUP_FILE="${PGDUMP_DIR}/pg_dumpall-${BACKUP_DATE}.pgdump"
                  echo "Backup file: ${BACKUP_FILE}"

                  export PGPASSWORD="${PGPASSWORD:-$(< "$PGPASSWORD_FILE")}"
                  pg_dumpall --clean --if-exists --load-via-partition-root --quote-all-identifiers --no-password --file="${BACKUP_FILE}"
                  echo "Doing gzip on file: ${BACKUP_FILE}"
                  gzip "${BACKUP_FILE}"
            storage:
              enabled: true
              size: 3Ti
              storageClass: "smb-sc"
            resources:
              limits:
                cpu: "3000m"
                memory: "3Gi"
              requests:
                cpu: "500m"
                memory: "0.5Gi"
  destination:
    server: https://kubernetes.default.svc
    namespace: admin
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 